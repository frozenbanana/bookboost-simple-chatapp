{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/signin/signin.component.css","webpack:///./src/app/auth/signin/signin.component.html","webpack:///./src/app/auth/signin/signin.component.ts","webpack:///./src/app/auth/signup/signup.component.css","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/chat/message.service.ts","webpack:///./src/app/shared/message.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule} from '@angular/router';\nimport { SigninComponent } from './auth/signin/signin.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { AuthGuard } from './auth/auth-guard.service';\n\n\nconst appRoutes: Routes = [\n    { path: '', redirectTo: '/signin', pathMatch: 'full' },\n    { path: 'signin', component: SigninComponent },\n    { path: 'signup', component: SignupComponent },\n    { path: 'chat', canActivate: [AuthGuard], component: ChatComponent },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(appRoutes)],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule {\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n<!-- <app-chat></app-chat> -->\"","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'simple-chat-app';\n    constructor() { }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { SigninComponent } from './auth/signin/signin.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthService } from './auth/auth.service';\nimport { AuthGuard } from './auth/auth-guard.service';\nimport { HttpModule } from '@angular/http';\nimport { MessageService } from './chat/message.service';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ChatComponent,\n        SigninComponent,\n        SignupComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        AppRoutingModule,\n        HttpModule,\n    ],\n    providers: [AuthService, MessageService, AuthGuard],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CanActivate,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService,\n                            private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n          if (this.authService.isAuthenticated()) {\n              return true;\n          } else {\n              this.router.navigate(['/signin']);\n          }\n        }\n\n}\n","import { Router } from '@angular/router';\nimport { Injectable, OnInit, OnDestroy } from '@angular/core';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { throwError, Subscription } from 'rxjs';\nimport { MessageService } from '../chat/message.service';\n\n@Injectable()\nexport class AuthService implements OnInit, OnDestroy {\n    private hasLoggedIn = false;\n    private apiUrl = 'https://simple-chat-app-bookboost.herokuapp.com/api';\n    private usersUrl = 'https://simple-chat-app-bookboost.herokuapp.com/api/users';\n    private authUrl = 'https://simple-chat-app-bookboost.herokuapp.com/api/authenticate';\n    private token = '';\n    private activeUserId: number;\n    private signupSubscribtion: Subscription;\n    constructor(private router: Router,\n        private http: Http) { }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy () {\n        this.signupSubscribtion.unsubscribe();\n    }\n\n    signupUser(email: string, password: string, name: string) {\n        const signupBody = { email: email, password: password, name: name };\n        this.signupSubscribtion = this.sendCredentials(signupBody).subscribe(\n            user => {\n                this.token = user['token'];\n                this.activeUserId = user['id'];\n                this.hasLoggedIn = true;\n                this.router.navigate(['/chat']);\n            },\n            (error) => {\n                console.log(error);\n            }\n        );\n    }\n\n    getActiveToken() { return this.token; }\n    getActiveUserId() { return this.activeUserId; }\n\n    getApiUrl() { return this.apiUrl; }\n\n\n    sendCredentials(body: { email: string, password: string, name: string }) {\n        const headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });\n        const params = `email=${body.email}&password=${body.password}&name=${body.name}`;\n        return this.http.post(this.usersUrl, params, { headers: headers }).pipe(map(\n            (response: Response) => {\n                const data = response.json();\n                return data;\n            }));\n    }\n\n    getToken(body: { email: string, password: string }) {\n        const headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });\n        const params = `email=${body.email}&password=${body.password}`;\n        return this.http.post(this.authUrl, params, { headers: headers }).pipe(map(\n            (response: Response) => {\n                const data = response.json();\n                return data;\n            }));\n    }\n\n    signinUser(email: string, password: string) {\n        const signinBody = { email: email, password: password };\n        this.getToken(signinBody).subscribe((user) => {\n            this.token = user['token'];\n            this.activeUserId = user['id'];\n            console.log('comming straight from the api: ', this.activeUserId);\n            this.hasLoggedIn = true;\n            this.router.navigate(['/chat']);\n        });\n    }\n\n    logout() {\n        console.log('User logged out!');\n        this.token = '';\n        this.activeUserId = -1;\n        this.hasLoggedIn = false;\n        this.router.navigate(['/signin']);\n    }\n\n    isAuthenticated() {\n        return this.hasLoggedIn;\n    }\n}\n","module.exports = \"#content {\\n    width: 400px;\\n    margin: 0 auto;\\n    background-color: #eeeeeb;\\n    border-style: solid;\\n    border-width: 2px;\\n    border-color: #cacac6;\\n    margin-top: 10px;\\n}\\n\\n#title {\\n    text-align:center;\\n    margin-top:10px;\\n}\\n\\ninput.ng-invalid.ng-touched {\\n    border: 1px solid red;\\n}\"","module.exports = \"<div class=\\\"col-md-12 col-md-offset-6\\\" id=\\\"content\\\">\\n    <h3 id=\\\"title\\\">Login</h3>\\n    <hr>\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"onSignin(f)\\\" #f=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-3 control-label\\\" for=\\\"email\\\">Email</label>\\n            <div class=\\\"col-sm-12\\\">\\n                <input\\n                type=\\\"email\\\"\\n                id=\\\"email\\\"\\n                name=\\\"email\\\"\\n                ngModel class=\\\"form-control\\\"\\n                placeholder=\\\"Email\\\"\\n                email\\n                required\\n                #email=\\\"ngModel\\\">\\n            </div>\\n            <span class=\\\"col-sm-3 help-block\\\" *ngIf=\\\"!email.valid && email.touched\\\">\\n                Please enter a valid email!\\n            </span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-3 control-label\\\" for=\\\"password\\\">Password</label>\\n            <div class=\\\"col-sm-12\\\">\\n                <input type=\\\"password\\\"\\n                id=\\\"password\\\"\\n                name=\\\"password\\\"\\n                ngModel\\n                class=\\\"form-control\\\"\\n                placeholder=\\\"Password\\\"\\n                required>\\n            </div>\\n            <span class=\\\"col-sm-3 help-block\\\" *ngIf=\\\"hasWrongCredentials()\\\">\\n                Oops, wrong credentials!\\n            </span>\\n        </div>\\n        <div class=\\\"form-group last\\\">\\n            <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n                <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"f.form.invalid\\\">Sign In</button>\\n                <small class=\\\"float-right\\\">Or click <a  class=\\\"text-right\\\" [routerLink]=\\\"['/signup']\\\">here </a> to register</small>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n    selector: 'app-signin',\n    templateUrl: './signin.component.html',\n    styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n    constructor(private authService: AuthService) { }\n\n    ngOnInit() {\n    }\n\n    onSignin(form: NgForm) {\n        const email = form.value.email;\n        const password = form.value.password;\n        this.authService.signinUser(email, password);\n        console.log('Passed email and password to Auth.Service');\n    }\n\n    hasWrongCredentials() {\n        return false; // TODO\n    }\n}\n","module.exports = \"#content {\\n    width: 400px;\\n    margin: 0 auto;\\n    background-color: #eeeeeb;\\n    border-style: solid;\\n    border-width: 2px;\\n    border-color: #cacac6;\\n    margin-top: 10px;\\n}\\n\\n#title {\\n    text-align:center;\\n    margin-top:10px;\\n}\\n\\ninput.ng-invalid.ng-touched {\\n    border: 1px solid red;\\n}\"","module.exports = \"<div class=\\\"col-md-12 col-md-offset-6\\\" id=\\\"content\\\">\\n    <h3 id=\\\"title\\\">Sign Up</h3>\\n    <hr>\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"onSignup(f)\\\" #f=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-3 control-label\\\" for=\\\"email\\\">Email</label>\\n            <div class=\\\"col-sm-12\\\">\\n                <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"Email\\\" email required #email=\\\"ngModel\\\">\\n                <span class=\\\"col-sm-3 help-block\\\" *ngIf=\\\"!email.valid && email.touched\\\">\\n                    Please enter a valid email!\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-3 control-label\\\" for=\\\"name\\\">Name</label>\\n            <div class=\\\"col-sm-12\\\">\\n                <input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"Name\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-3 control-label\\\" for=\\\"password\\\">Password</label>\\n            <div class=\\\"col-sm-12\\\">\\n                <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"Password\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"form-group last\\\">\\n            <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n                <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">Sign Up</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n    constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n    onSignup(form: NgForm) {\n        const email = form.value.email;\n        const password = form.value.password;\n        const name = form.value.name;\n        this.authService.signupUser(email, password, name);\n    }\n\n}\n","module.exports = \"#content {\\n    width: 400px;\\n    margin: 0 auto;\\n    background-color: #eeeeeb;\\n    border-style: solid;\\n    border-width: 2px;\\n    border-color: #cacac6;\\n    margin-top: 10px;\\n}\\n\\n#title {\\n    text-align:center;\\n    margin-top:10px;\\n    margin-left:165px;\\n}\\n\\n#chatlog {\\n    background: #e5e5e5;\\n    height:50vh;\\n    overflow: scroll;\\n    overflow-x:hidden;\\n    display: flex;\\n    border-style: solid;\\n    border-width: 2px;\\n    border-color: #cacac6;\\n}\\n\\n.logout {\\n    margin-top: 10px;\\n    margin-left: 50px;\\n}\\n\\n.messages {\\n  background: white;\\n  padding: 5px;\\n  padding-bottom: 0px;\\n  border-radius: 2px;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\\n  max-width: 80%;\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n}\\n\\n.messages > p {\\n  font-size: 11px;\\n}\\n\\n.msg_sent {\\n\\n   margin-right: 0;\\n   margin-left: auto;\\n}\\n\\n.msg_receive {\\n    padding-left: 0;\\n    margin-right: auto;\\n}\\n\\n.timestamp {\\n    color: #c0c0c0;\\n    font-size: 60%;\\n}\"","module.exports = \"<!-- <div class=\\\"container\\\"> -->\\n<div id=\\\"content\\\" class=\\\"col-md-12 col-md-offset-6\\\">\\n    <div class=\\\"row\\\">\\n        <h3 id=\\\"title\\\">Chat</h3>\\n        <div class=\\\"col-md-2 float-right\\\">\\n            <button class=\\\"btn btn-danger logout\\\" (click)=\\\"onLogout()\\\">Log Out</button>\\n        </div>\\n    </div>\\n    <hr>\\n    <select #receiverSelect (change)=\\\"onSelectChange($event)\\\" ([ngModel])=\\\"reciever_id\\\" name=\\\"reciever\\\" class=\\\"form-control\\\">\\n        <option *ngFor=\\\"let user of users\\\" value=\\\"{{user.id}}\\\">{{ user.name }} ({{user.email}})</option>\\n    </select>\\n    <br>\\n    <div #chatlog id=\\\"chatlog\\\" (change)=\\\"onScroll($event)\\\" class=\\\"pre-scrollable well well-sm\\\">\\n        <div class=\\\"col-md-12\\\" style=\\\"padding-left: 30px;\\\">\\n            <div class=\\\"row messages\\\" [ngClass]=\\\"message.user_id === user_id ? 'msg_sent' : 'msg_recieve'\\\" *ngFor=\\\"let message of conversation\\\">\\n                <p> {{ message.content }} <br> <span class=\\\"timestamp\\\">Sent: {{message.created_at}} by {{decideSender(message.user_id)}}</span></p>\\n            </div>\\n        </div>\\n    </div>\\n    <br>\\n    <form (ngSubmit)=\\\"onSend()\\\" #f=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-9\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"message\\\" ngModel [value]=\\\"message\\\" required>\\n                </div>\\n                <div class=\\\"col-md-3 float-right\\\">\\n                    <button class=\\\"btn btn-primary float-center\\\" type=\\\"submit\\\">Send</button>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n<!-- </div> -->\"","import { Component, OnInit, ViewChild, Injectable, OnChanges, OnDestroy } from '@angular/core';\nimport { Message } from '../shared/message.model';\nimport { NgForm } from '@angular/forms';\nimport { MessageService } from './message.service';\nimport { AuthService } from '../auth/auth.service';\nimport { User } from '../shared/user.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-chat',\n    templateUrl: './chat.component.html',\n    styleUrls: ['./chat.component.css']\n})\n@Injectable()\nexport class ChatComponent implements OnInit, OnDestroy {\n    @ViewChild('f') messageForm: NgForm;\n    conversation: Message[] = [];\n    users: User[] = [];\n    user_id = -1;\n    user_name = 'Me';\n    receiver_id = 0;\n    receiver_name = '';\n    userSubscription: Subscription;\n    convSubscription: Subscription;\n    msgSubscription: Subscription;\n    private updateInterval;\n    constructor(private msgService: MessageService,\n        private authService: AuthService) { }\n\n\n    ngOnInit() {\n        this.user_id = this.msgService.getActiveUserId();\n\n        // Check for new  messages\n        this.updateInterval = setInterval( () => {\n            if (this.receiver_id !== 0) {\n                this.updateConversation();\n            }\n        }, 4000);\n\n        // Init Users\n       this.userSubscription = this.msgService.getUsers()\n            .subscribe((users) => {\n                this.users = users;\n                this.users = this.users.filter((userEl) => userEl['id'] !== this.user_id); // removing active user\n                console.log('getting users from subscribtion', this.users);\n                console.log('active user is: ', this.user_id);\n                this.receiver_id = this.users[0]['id'];\n                 this.updateConversation();\n            },\n                (error) => {\n                    console.log(error);\n                });\n    }\n\n    // When user hits send\n    onSend() {\n        const newMessage = new Message(0,\n            this.user_id,\n            this.receiver_id,\n            this.messageForm.value.message,\n            new Date().toString(),\n        );\n        // this.messages.push(newMessage);\n        // this.conversation.push(newMessage);\n        this.msgSubscription = this.msgService.saveMessage({\n            user_id: this.user_id,\n            receiver_id: this.receiver_id,\n            content: newMessage.content\n        })\n            .subscribe(data => {\n                console.log(data);\n                this.scrollChatDown();\n            });\n        this.messageForm.reset();\n    }\n\n    // Update chat log depending on whom is selected\n    updateConversation() {\n        this.convSubscription  = this.msgService.getConversation(this.receiver_id)\n            .subscribe((conversationData) => {\n                // const updatedConversation: Message[] = <Message[]>conversationData;\n                this.conversation = <Message[]>conversationData;\n            });\n    }\n\n    // Helper function to scroll down after new message\n    scrollChatDown() {\n        const objDiv = (<HTMLInputElement>document.getElementById('chatlog'));\n        objDiv.scrollTop = objDiv.scrollHeight;\n    }\n\n    // Change chat log and update whom is active reciever\n    onSelectChange(event: Event) {\n        this.receiver_id = +(<HTMLInputElement>event.target).value;\n        const selectedUsers = this.users.find(user => user['id'] === this.receiver_id);\n        console.log(selectedUsers);\n        this.receiver_name = selectedUsers['name'];\n        this.updateConversation();\n    }\n\n    // Logout\n    onLogout() {\n        clearInterval(this.updateInterval);\n        this.authService.logout();\n    }\n\n    // Used in template to add sender in every message\n    decideSender(id: number) {\n        if (id === this.user_id) {\n            return this.user_name;\n        } else {\n            return this.receiver_name;\n        }\n    }\n\n    // Destroy our subscribtions\n    ngOnDestroy() {\n        this.userSubscription.unsubscribe();\n        this.convSubscription.unsubscribe();\n        this.msgSubscription.unsubscribe();\n    }\n\n}\n","import { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable()\nexport class MessageService {\n    private apiUrl;\n    private token;\n    private activeUserId: number;\n\n    constructor(private http: Http, private authService: AuthService) {\n        this.apiUrl = this.authService.getApiUrl();\n        this.token = this.authService.getActiveToken();\n        this.activeUserId = this.authService.getActiveUserId();\n        console.log(this.activeUserId);\n        console.log('MessageService has been created with api url: ', this.apiUrl);\n    }\n\n    setActiveUserId(id: number) {\n        this.activeUserId = id;  // is set by auth Service when logging in.\n    }\n\n    getActiveUserId(): number {\n        return this.activeUserId;\n    }\n\n    getMessages() {\n        console.log(`${this.apiUrl}/users/${this.activeUserId}`);\n        return this.http.get(`${this.apiUrl}/users/${this.activeUserId}`)\n            .pipe(map((response: Response) => {\n                return response.json().data.messages;\n            }));\n    }\n\n    getConversation(receiver_id: number) {\n        // console.log(this.activeUserId);\n        // console.log(receiver_id);\n        let conversationUrl = `${this.apiUrl}/messages/`;\n        conversationUrl += `from/${this.activeUserId}/`;\n        conversationUrl += `to/${receiver_id}`;\n        conversationUrl += `?token=${this.token}`;\n        return this.http.get(conversationUrl)\n            .pipe(map((response: Response) => {\n                console.log(response.json());\n                return response.json().conversation.data;\n            }));\n    }\n\n    saveMessage(body: {user_id: number, receiver_id: number, content: string}) {\n        const headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded'});\n        const options = new RequestOptions({headers: headers});\n\n        const params = ` &user_id=${body.user_id}\n                                        &receiver_id=${body.receiver_id}\n                                        &content=${body.content}`;\n\n        return this.http.post(`${this.apiUrl}/messages?token=${this.token}`, params, options).pipe(map(\n            (response: Response) => {\n                const data = response.json();\n                return data;\n            }));\n    }\n\n    getUsers() {\n        return this.http.get(`${this.apiUrl}/users`)\n            .pipe(map(\n                (response: Response) => {\n                    const data = response.json();\n                    return data['data'];\n                }\n            ));\n    }\n}\n\n","export class Message {\n    constructor(public id: number,\n                            public user_id: number,\n                            public receiver_id: number,\n                            public content: string,\n                            public created_at: string) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}